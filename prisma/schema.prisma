// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Plan {
  id            String         @id @default(cuid())
  name          String
  description   String
  limitMembers  Int
  price         Float
  organizations Organization[]
}

model Organization {
  id            String               @id @default(cuid())
  name          String
  creationDate  DateTime?
  planId        String?
  plan          Plan?                @relation(fields: [planId], references: [id])
  members       OrganizationMember[]
  patients      Patient[]
  consultations Consultation[]
  appointments  MedicalAppointment[]
  diagnoses     Diagnosis[]
  treatments    Treatment[]
}

model User {
  id            String               @id @default(cuid())
  email         String               @unique
  authProvider  AuthProvider         @default(email)
  password      String?
  creationDate  DateTime?
  memberships   OrganizationMember[]
  consultations Consultation[]
}

model OrganizationMember {
  id             String       @id @default(cuid())
  role           String
  organizationId String
  userId         String
  organization   Organization @relation(fields: [organizationId], references: [id])
  user           User         @relation(fields: [userId], references: [id])

  @@unique([organizationId, userId])
}

model Patient {
  id             String               @id @default(cuid())
  name           String
  aPaternal      String?
  aMaternal      String?
  sexo           String
  birthDate      DateTime
  phone          Int
  email          String?
  creationDate   DateTime?
  organizationId String
  organization   Organization         @relation(fields: [organizationId], references: [id])
  consultations  Consultation[]
  appointments   MedicalAppointment[]
}

model MedicalAppointment {
  id              String       @id @default(cuid())
  appointmentDate DateTime
  appointmentTime DateTime
  patientId       String
  organizationId  String
  patient         Patient      @relation(fields: [patientId], references: [id])
  organization    Organization @relation(fields: [organizationId], references: [id])
}

model Diagnosis {
  id             String                  @id @default(cuid())
  name           String
  description    String
  creationDate   DateTime?
  organizationId String
  organization   Organization            @relation(fields: [organizationId], references: [id])
  consultations  ConsultationDiagnosis[]
}

model Treatment {
  id             String                  @id @default(cuid())
  description    String
  duration       String
  instructions   String
  organizationId String
  organization   Organization            @relation(fields: [organizationId], references: [id])
  consultations  ConsultationTreatment[]
}

model Consultation {
  id               String                  @id @default(cuid())
  consultationDate DateTime
  motivo           String
  observaciones    String?
  creationDate     DateTime?
  organizationId   String
  patientId        String
  userId           String
  organization     Organization            @relation(fields: [organizationId], references: [id])
  patient          Patient                 @relation(fields: [patientId], references: [id])
  user             User                    @relation(fields: [userId], references: [id])
  diagnoses        ConsultationDiagnosis[]
  treatments       ConsultationTreatment[]
}

model ConsultationDiagnosis {
  consultationId String
  diagnosisId    String
  consultation   Consultation @relation(fields: [consultationId], references: [id])
  diagnosis      Diagnosis    @relation(fields: [diagnosisId], references: [id])

  @@id([consultationId, diagnosisId])
}

model ConsultationTreatment {
  consultationId String
  treatmentId    String
  consultation   Consultation @relation(fields: [consultationId], references: [id])
  treatment      Treatment    @relation(fields: [treatmentId], references: [id])

  @@id([consultationId, treatmentId])
}

enum AuthProvider {
  email
  google
  github
}
